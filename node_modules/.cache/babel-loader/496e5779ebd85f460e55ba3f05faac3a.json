{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash_\\\\Desktop\\\\covidtracker\\\\covidtracker\\\\src\\\\pages\\\\map\\\\map.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport GoogleMapReact from \"google-map-react\";\nimport CountUp from 'react-countup';\nimport styles from './map.module.css';\n\nfunction Map() {\n  const [latest, setLatest] = useState([]);\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v2/all\"), axios.get(\"https://corona.lmao.ninja/v2/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResults(responseArr[1].data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  const countriesLocations = results.map((data, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      lat: data.countryInfo.lat,\n      lng: data.countryInfo.long,\n      style: {\n        color: \"black\",\n        backgroundColor: \"#FFF\",\n        height: \"25px\",\n        width: \"45px\",\n        textAlign: \"center\",\n        borderRadius: \"30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      height: \"10px\",\n      src: data.countryInfo.flag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CountUp, {\n      start: 0,\n      end: data.active,\n      duration: 2,\n      separator: \",\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"The below map represents the total number of Active cases for each country\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '90vh',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: \"AIzaSyBhu7OxqEYX83CzrcZZwq7_qnXxoBh7jao\"\n    },\n    defaultCenter: {\n      lat: 51.5074,\n      lng: 0.1278\n    },\n    defaultZoom: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, countriesLocations)));\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/yash_/Desktop/covidtracker/covidtracker/src/pages/map/map.js"],"names":["React","useEffect","useState","axios","GoogleMapReact","CountUp","styles","Map","latest","setLatest","results","setResults","all","get","then","responseArr","data","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","countriesLocations","map","i","countryInfo","lat","long","color","backgroundColor","height","width","textAlign","borderRadius","flag","active","alignItems","key","lng"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport CountUp from 'react-countup';\r\nimport styles from './map.module.css';\r\n\r\nfunction Map() {\r\n  const [latest, setLatest] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .all([\r\n        axios.get(\"https://corona.lmao.ninja/v2/all\"),\r\n        axios.get(\"https://corona.lmao.ninja/v2/countries\"),\r\n      ])\r\n      .then((responseArr) => {\r\n        setLatest(responseArr[0].data);\r\n        setResults(responseArr[1].data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const date = new Date(parseInt(latest.updated));\r\n  const lastUpdated = date.toString();\r\n\r\n  const countriesLocations = results.map((data, i) => {\r\n    return (\r\n      <div\r\n          lat={data.countryInfo.lat}\r\n          lng={data.countryInfo.long}\r\n          style={{\r\n            color: \"black\",\r\n            backgroundColor: \"#FFF\",\r\n            height: \"25px\",\r\n            width: \"45px\",\r\n            textAlign: \"center\",\r\n            borderRadius : \"30%\",\r\n          }}\r\n        > \r\n          <img height=\"10px\" src={data.countryInfo.flag} />\r\n          <br />\r\n          <CountUp\r\n            start = {0}\r\n            end={data.active}\r\n            duration={2}\r\n            separator=\",\"\r\n          />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{alignItems: \"center\"}}>\r\n      <br />\r\n      <p>The below map represents the total number of Active cases for each country</p>\r\n      <div style={{ height: '90vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyBhu7OxqEYX83CzrcZZwq7_qnXxoBh7jao\" }}\r\n          defaultCenter={{ lat: 51.5074, lng: 0.1278 }}\r\n          defaultZoom={4}\r\n        >\r\n          {countriesLocations} \r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}